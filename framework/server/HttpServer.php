<?php
/**
 * Created by PhpStorm.
 * User: rxw
 * Date: 17-9-16
 * Time: 下午8:48
 */
namespace framework\server;

use framework\base\Container;

class HttpServer extends BaseServer
{
    protected function init()
    {
        $this->_server = new \swoole_http_server($this->_conf['ip'], $this->_conf['port']);
        parent::init(); // TODO: Change the autogenerated stub
        $this->onRequest();
    }

    protected function onRequest()
    {
        $this->_server->on("request", function (\swoole_http_request $request,\swoole_http_response $response)
        {
            if (DEBUG)
            {
                ob_start();
            }
            if ($this->_event)
            {
                $this->_event->onRequest($request,$response);
            }
            $container = Container::getInstance();
            if (!empty($request->get)) {
                $_GET = $request->get;
            }
            if (!empty($request->post)) {
                $_POST = $request->post;
            }
            if (!empty($request->files)) {
                $_FILES = $request->files;
//                $container->getComponent('upload')->save('file'); 上传文件测试
            }
            if (!empty($request->cookie)) {
                $_COOKIE = $request->cookie;
            }

            $hasEnd = false;
            try
            {
                if ($this->_event)
                {
                    $this->_event->onResponse($request,$response);
                }
                $request->server['HTTP_HOST'] = $request->header['host'];
                foreach ($request->server as $key => $item)
                {
                    $request->server[strtoupper($key)] = $item;
                    unset($request->server[$key]);
                }
                $_SERVER = $request->server;


                $urlInfo = $container->getComponent(SYSTEM_APP_NAME, 'url')->run();
                if ($urlInfo !== false) {
                    $container->getComponent(SYSTEM_APP_NAME, 'dispatcher')->setSystem($urlInfo['system']);
                    // 初始化配置项
                    if (!$container->appHasComponents($urlInfo['system'])) {
                        $appConf = require_once APP_ROOT. '/' .$urlInfo['system'] . '/conf/conf.php';

                        $appConf['addComponentsMap'] = $appConf['addComponentsMap'] ?? [];
                        $container->addComponents($urlInfo['system'], $appConf['addComponentsMap']);
                        $container->setAppComponents($urlInfo['system'] ,array(
                            'components' => $appConf['components'],
                            'composer' => $appConf['composer']
                        ));
                    }
                    $result = $container->getComponent(SYSTEM_APP_NAME, 'dispatcher')->run($urlInfo);
                    $container->getComponent(SYSTEM_APP_NAME, 'cookie')->send($response);
                    $hasEnd = $container->getComponent(SYSTEM_APP_NAME, 'response')->send($response, $result);
                    $container->getComponent(SYSTEM_APP_NAME, 'dispatcher')->setSystem('');
                    unset($result);
                }
            }
            catch (\Exception $exception)
            {
                $code = $exception->getCode() > 0 ? $exception->getCode() : 404;
                $response->status($code);
                if (DEBUG) {
                    ob_get_clean();
                    $response->write($exception->getMessage().$exception->getTraceAsString());
                }
                $this->triggerException($exception);
            }
            catch (\Error $e)
            {
                $code = $e->getCode() > 0 ? $e->getCode() : 500;
                $response->status($code);
                if (DEBUG) {
                    ob_get_clean();
                    $response->write($e->getMessage().$e->getTraceAsString());
                }
                $this->triggerException($e);
            }
            if (!$hasEnd)
            {
                $response->end();
            }

            $_GET = null;
            $_POST = null;
            $_FILES = null;
            $_COOKIE = null;
            $_SERVER = null;
            $container->finish($urlInfo['system']);
            unset($container,$request,$response, $urlInfo);
        });
    }
}